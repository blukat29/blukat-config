
DOTFILE_DIR="$( cd "$( dirname $(readlink -e "${BASH_SOURCE[0]}") )" && pwd )"
SCRIPTS_DIR=$DOTFILE_DIR/../scripts

trailing_whitespaces () {
  find . -type f -exec egrep -l " +$" {} \;
}

disas () {
  objdump -D -b binary -mi386 $1
}

reif () {
  sudo ifdown eth0
  sudo ifup eth0
  ping google.com
}

gdays () {

  total=`git rev-list HEAD --count`
  since=`git log --date=short --reverse --pretty=format:'%cd, %cr' | head -1`
  remote=`git config --get-regexp remote.*.url | cut -d " " -f 2`
  branch=`git symbolic-ref --short HEAD`

  # Collect additions and deletions stats.
  stat=`git log --oneline --numstat --no-merges \
       --date=short --pretty=format:'%cd %h' | python $SCRIPTS_DIR/git-lines-stat.py`

  # Collect start-of-the-day commits
  border=`git log --date=short --pretty=format:'%cd %h' |
          awk '
            BEGIN {
              date = "";
              hash = "";
              cnt = 0;
            }
            {
              cnt=cnt+1;
              if (date != $1) {
                if (date != "") {
                  print date, hash, cnt;
                }
                date = $1;
                hash = $2;
                cnt = 0;
              }
            }
            END {
              print date, hash, cnt+1;
            }'`

  # Inject date markers during git log.
  git log --oneline --color | awk \
    -v border="$border" -v stat="$stat" \
    -v total="$total" -v since="$since" \
    -v remote="$remote" -v branch="$branch" '
    BEGIN {
      split(border, barr, "\n");
      split(stat, sarr, "\n");
      first = 1;
      printf "      Total %d commits since %s\n", total, since;
      printf "      Remote url %s\n", remote;
      printf "      On branch %s\n", branch;
    }
    match($0, /[0-9a-f]{6,}/) {
      hash = substr($0, RSTART, RLENGTH);

      for (i in sarr) {
        split(sarr[i], s, " ");
        if (s[1] == hash) {
          pos = s[2];
          neg = s[3];
        }
      }

      for (i in barr) {
        split(barr[i], b, " ");
        if (b[2] == hash) {
          date = b[1];
          cnt = b[3];
          first = 1;
        }
      }

      if (first == 1) {
        str = sprintf("\n\033[1;4;37m%s\033[0m", date);
        first = 0;
      }
      else {
        str = "          ";
      }
      posstr = sprintf("+%d", pos);
      negstr = sprintf("-%d", neg);
      diff = sprintf("\033[32m%5s \033[31m%5s\033[0m", posstr, negstr);
      printf "%s %26s %s\n", str, diff, $0;
    }
    END {
      print "\033[0m";
    }
    ' | less -r -X

}

memstat () {
  vmstat -s | head -2 | python $SCRIPTS_DIR/memstat.py
}

gitdays () {
  git log --date=short --pretty=format:'%cd %h' | python $SCRIPTS_DIR/git-days.py
}


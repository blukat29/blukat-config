
"   File structure
" Vundle plugins
" General settings
" Keyboard shortcuts
" File type specific settings
" Omnicomplete settings
" Plugin settings

" #### Vundle Plugins ############################
set nocompatible  " it must be the first line to enable Vim features.
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'

"Plugin 'xolox/vim-misc'
"Plugin 'xolox/vim-easytags'

Plugin 'ervandew/supertab.git'
Plugin 'davidhalter/jedi-vim'

Plugin 'closetag.vim'
Plugin 'gregsexton/MatchTag'

Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'

Plugin 'bling/vim-airline'
Plugin 'airblade/vim-gitgutter'
Plugin 'majutsushi/tagbar'

Plugin 'fatih/vim-go'
Plugin 'derekwyatt/vim-scala'

call vundle#end()
filetype plugin indent on

" #### General ###################################
set tabstop=4   " default tabs and indents
set shiftwidth=4
set expandtab
set autoindent

syntax on       " syntax highlight
set hlsearch    " highlight search result
set number      " line numbers
set nowrap      " don't wrap long sentences
set viminfo=""  " disable viminfo

set scrolloff=3   " Keep 3 lines above and below cursor.
set laststatus=2  " Always turn on status line
set backspace=indent,eol,start  " Make backspace work as other editors
set tags=tags;    " Read local tags file

" #### Keyboard shortcut #########################

" <Ctrl-l> redraws the screen and removes any search highlights
nnoremap <silent> <C-l> :nohl<CR><C-l>

" Map common mistakes.
command! WQ wq
command! Wq wq
command! W w
command! Q q

" Move between splits
nnoremap <Tab> <C-w>w

" #### File type specific ########################

" File type specific tabs
autocmd Filetype python setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4
autocmd Filetype html setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype xml setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2

" File type mappings
autocmd BufNewFile,BufRead Dockerfile set filetype=config
autocmd BufNewFile,BufRead *.phps set filetype=php
autocmd BufNewFile,BufRead *.cup set filetype=java
autocmd BufNewFile,BufRead *.flex set filetype=java
autocmd BufNewFile,BufRead *.json set filetype=javascript
autocmd BufNewFile,BufRead bashrc set filetype=sh
autocmd BufNewFile,BufRead gitconfig set filetype=gitconfig
autocmd BufNewFile,BufRead vimrc set filetype=vim

" #### Omnicomplete ##############################

" Turn on omnicomplete
set omnifunc=syntaxcomplete#Complete
set completeopt=longest,menuone
au BufNewFile,BufRead,BufEnter *.cpp,*.hpp set omnifunc=omni#cpp#complete#Main

" Omnicomplete settings
let OmniCpp_NamespaceSearch = 1
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_ShowAccess = 1
let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters
let OmniCpp_MayCompleteDot = 1 " autocomplete after .
let OmniCpp_MayCompleteArrow = 1 " autocomplete after ->
let OmniCpp_MayCompleteScope = 1 " autocomplete after ::
let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]

" Close Omni-Completion tip window when leaving insert mode
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

" Supertab does Omni-Completion by default
" let g:SuperTabDefaultCompletionType = "<c-x><c-o>"

" #### Plugins ###################################

" Remove trailing whitespaces
command RemoveTrailingWhitespaces %s/\s\+$//

" Easytags
let g:easytags_file = '~/.vim/tags'
let g:easytags_dynamic_files = 1
let g:easytags_events = ['BufWritePost','VimEnter','BufEnter','Winenter']
let g:easytags_suppress_report = 1

" Jedi-Vim - no documentation window during completion.
autocmd FileType python setlocal completeopt-=preview
let g:jedi#show_call_signatures = 0

" Vim-airline
let g:airline_left_sep=''
let g:airline_right_sep=''
let g:airline#extensions#hunks#enabled = 1
let g:airline#extensions#branch#enabled = 1

" GitGutter
let g:gitgutter_sign_removed = "-"
let g:gitgutter_sign_removed_first_line = "^"
let g:gitgutter_map_keys = 0
let g:gitgutter_realtime = 0
let g:gitgutter_eager = 0

" TagBar
nmap <F8> :TagbarToggle<CR>
let g:tagbar_map_closeallfolds = "_"
let g:tagbar_map_openfold = "="
let g:tagbar_autofocus = 1
let g:tagbar_iconchars = ['+', '-']
let g:tagbar_width = 50
let g:tagbar_sort = 0

" #### Coloring ##################################

if (&term == "screen-256color") || (&term == "xterm-256color")

  hi clear
  set t_Co=256
  colorscheme default

  hi Question cterm=bold,underline ctermfg=Cyan
  hi Comment ctermfg=blue
  hi LineNr ctermfg=248
  hi ErrorMsg cterm=bold,underline ctermfg=Red ctermbg=none
  hi WarningMsg cterm=bold,underline ctermfg=Red ctermbg=none
  hi Visual cterm=bold ctermbg=236
  hi Search cterm=bold ctermfg=White ctermbg=DarkBlue
  hi Pmenu ctermfg=Black ctermbg=Grey
  hi PmenuSel cterm=bold ctermfg=Black ctermbg=Cyan
  hi VertSplit cterm=none ctermfg=248 ctermbg=236
  hi FoldColumn ctermfg=119 ctermbg=236
  hi SignColumn ctermbg=Black
  hi ColorColumn ctermbg=232
  hi clear SignColumn

else

  hi clear
  colorscheme default

endif

" Trailing Whitespace
hi TrailingWhitespace ctermbg=red
match TrailingWhitespace /\s\+$/
command! RemoveTrailingWhitespace :%s/\s\+$//

